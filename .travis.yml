# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.
rust: beta

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=yadd

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=aarch64-unknown-linux-musl RUSTFLAGS="-C link-arg=-lgcc"
    - env: TARGET=arm-unknown-linux-musleabi
    - env: TARGET=armv7-unknown-linux-musleabihf
    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=mips-unknown-linux-musl
    - env: TARGET=mips64-unknown-linux-gnuabi64
    - env: TARGET=mips64el-unknown-linux-gnuabi64
    - env: TARGET=mipsel-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Windows
    - env: TARGET=x86_64-pc-windows-gnu

    # Bare metal
    # These targets don't support std and as such are likely not suitable for
    # most crates.
    # - env: TARGET=thumbv6m-none-eabi
    # - env: TARGET=thumbv7em-none-eabi
    # - env: TARGET=thumbv7em-none-eabihf
    # - env: TARGET=thumbv7m-none-eabi

    # Testing other channels
    # - env: TARGET=x86_64-unknown-linux-gnu
    #   rust: nightly
    # - env: TARGET=x86_64-apple-darwin
    #   os: osx
    #   rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: dQaGDYlIgK6NRrjxtkc4YoMEHzbCEowbWu5gT7aEoRi0+i8qVjdB6/uknqRn4s4IYSln1NYQZGKsHXRJNgAYp5tcTdDeQM1xAoUIbNXxVCp+Ynv2yHXW0GhRXsUvkP3idVsnd1csIFYDYkH7zokdyhhr/PGFYT2QR0a4OC6lm+lFaYtvU8KzjsCBVHEn1UOxYhYLu/ONcsSh1zY+pJz0hGw53s86IkvA8jK+127sMoQKo5JTQ1MhyUxbrcnzw8ncJlTvCK01YNgz21LURvEWzZP5TLB68Gcu0+VLDndhTWKYHphMkDwjxvFnqEUH3bVWqwgFp2klhA45el2Ukv6QLvFZQ/9M2vf4vTDDPWlsE9lxohSdqMVm/j/b0KtmX7jvZ8sLBfXfEavcwtSG/g/zWZ7n7eCi0v6h5RGwfskFrOGKsELt6X4Vre+ewy55zBgB62lSqpB30EaJyJXUb6ORvripbeyxMzIIk2rmWfSmRbZYe8yxLnHYBlQVb+ECggnQEt1+IgSeT43IOZyhsES0AC0aDO0nVBOOj9SJySFUtL9hfyPv7xhCB6vHNq6QwsF/SNp1iFjzYJ3+gu+M9ydUQZsTlrmxF5bmNq/p+nqf8IdgU1XjlrdiL1OdAiKf3mfQRzCWWglJT8igMUhZi2oei7ZDoiKntPvF3ACkPk/WfGw=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = beta
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
